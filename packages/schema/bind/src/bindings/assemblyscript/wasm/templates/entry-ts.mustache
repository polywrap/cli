import {
  wrap_invoke_args,
  wrap_invoke,
  wrap_abort,
  InvokeArgs
} from "@polywrap/wasm-as";

{{#functions.length}}
import {
  {{#functions}}
  {{name}}Wrapped{{^last}},{{/last}}
  {{/functions}}
} from "./{{type}}/wrapped";
{{/functions.length}}

export function _wrap_invoke(method_size: u32, args_size: u32): bool {
  const args: InvokeArgs = wrap_invoke_args(
    method_size,
    args_size
  );

  {{#functions}}
  {{^first}}else {{/first}}if (args.method == "{{name}}") {
    return wrap_invoke(args, {{name}}Wrapped);
  }
  {{/functions}}
  else {
    return wrap_invoke(args, null);
  }
}

export function wrapAbort(
  msg: string | null,
  file: string | null,
  line: u32,
  column: u32
): void {
  wrap_abort(
    msg ? msg : "",
    file ? file : "",
    line,
    column
  );
}
