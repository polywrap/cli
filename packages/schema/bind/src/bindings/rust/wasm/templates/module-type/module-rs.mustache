{{#moduleType}}
use crate::{
    {{#methods}}
    Args{{#toUpper}}{{name}}{{/toUpper}},
    {{/methods}}
};
use polywrap_wasm_rs::{
    BigInt,
    BigNumber,
    Map,
    JSON,
};
{{#propertyDeps.length}}

{{#propertyDeps}}
{{^isEnum}}
use {{crate}}::{{#detectKeyword}}{{#toUpper}}{{type}}{{/toUpper}}{{/detectKeyword}};
{{/isEnum}}
{{#isEnum}}
use crate::{
    {{#detectKeyword}}{{#toUpper}}{{type}}{{/toUpper}}{{/detectKeyword}},
};
{{/isEnum}}
{{/propertyDeps}}
{{/propertyDeps.length}}

pub struct Module;

pub trait ModuleTrait {
  {{#methods}}
  fn {{#detectKeyword}}{{#toLower}}{{name}}{{/toLower}}{{/detectKeyword}}(args: Args{{#toUpper}}{{name}}{{/toUpper}}{{#env}}, env: {{#required}}Env{{/required}}{{^required}}Option<Env>{{/required}}{{/env}}) -> Result<{{#return}}{{#toWasm}}{{toGraphQLType}}{{/toWasm}}{{/return}}, String>;
  {{^last}}

  {{/last}}
  {{/methods}}
}
{{/moduleType}}