#import { Mutation, Connection } into Ethereum from "w3://ens/ethereum.web3api.eth"
#import { Query } into UTS46 from "w3://ens/uts46.web3api.eth"
#import { Query } into SHA3 from "w3://ens/sha3.web3api.eth"
#import { TxOverrides } from "../common/schema.graphql"

type ConfigureOpenDomainResponse {
  fifsRegistrarAddress: String!
  registerOpenDomainTxReceipt: Ethereum_TxResponse!
  setSubdomainRecordTxReceipt: Ethereum_TxResponse!
}

type CreateSubdomainInOpenDomainResponse {
  registerSubdomainTxReceipt: Ethereum_TxResponse!
  setResolverTxReceipt: Ethereum_TxResponse!
}

type CreateSubdomainInOpenDomainAndSetContentHashResponse implements CreateSubdomainInOpenDomainResponse {
  setContentHashReceiptTx: Ethereum_TxResponse!
}

type Mutation {
  setResolver(
    domain: String!
    resolverAddress: String!
    registryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  registerDomain(
    domain: String!
    registrarAddress: String!
    registryAddress: String!
    owner: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  reverseRegisterDomain(
    domain: String!
    reverseRegistryAddress: String!
    owner: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setName(
    domain: String!
    reverseRegistryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setAddress(
    domain: String!
    address: String!
    resolverAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setOwner(
    domain: String!
    newOwner: String!
    registryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setSubdomainOwner(
    subdomain: String!
    owner: String!
    registryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setRecord(
    domain: String!
    owner: String!
    resolverAddress: String!
    ttl: String!
    registryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setSubdomainRecord(
    domain: String!
    label: String!
    owner: String!
    resolverAddress: String!
    ttl: String!
    registryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setContentHash(
    domain: String!
    cid: String!
    resolverAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setAddressFromDomain(
    domain: String!
    address: String!
    registryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setContentHashFromDomain(
    domain: String!
    cid: String!
    registryAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  deployFIFSRegistrar(
    registryAddress: String!
    tld: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): String!

  registerSubnodeOwnerWithFIFSRegistrar(
    label: String!
    owner: String!
    fifsRegistrarAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  setTextRecord(
    domain: String!
    resolverAddress: String!
    key: String!
    value: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): Ethereum_TxResponse!

  configureOpenDomain(
    tld: String!
    owner: String!
    registryAddress: String!
    resolverAddress: String!
    registrarAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): ConfigureOpenDomainResponse!

  createSubdomainInOpenDomain(
    label: String!
    domain: String!
    owner: String!
    fifsRegistrarAddress: String!
    registryAddress: String!
    resolverAddress: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): CreateSubdomainInOpenDomainResponse!

  createSubdomainInOpenDomainAndSetContentHash(
    label: String!
    domain: String!
    owner: String!
    fifsRegistrarAddress: String!
    registryAddress: String!
    resolverAddress: String!
    cid: String!
    connection: Ethereum_Connection
    txOverrides: TxOverrides
  ): CreateSubdomainInOpenDomainAndSetContentHashResponse
}
