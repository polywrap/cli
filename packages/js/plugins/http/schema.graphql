type Query {
  get(url: String!, request: Request): Response
  post(url: String!, request: Request): Response
}

type Response {
  data: ResponseData
  error: ResponseError
}

type ResponseData {
  status: UInt32!
  statusText: String!
  headers: [Header!]
  type: ResponseType
  body: ResponseBody
}

type ResponseError {
  errorMessage: String!
  errorCode: String!
  timeoutExcided: Boolean!
}

enum ResponseType {
  TEXT
  BUFFER
  JSON
}

type ResponseBody {
  text: String
  buffer: Bytes
  json: JSON
}

type Request {
  headers: [Header!]
  urlParams: [UrlParam!]
  responseType: ResponseType!
  data: RequestData
  timeout: UInt32
}

type RequestData {
  text: String
  buffer: Bytes
  form: FormData
}

type Header {
  key: String!
  value: JSON!
}

type UrlParam {
  key: String!
  value: JSON!
}

type FormData {
  data: [FormDataEntry!]
}

type FormDataEntry {
  key: String!
  data: String
  opts: FormDataOptions
}

type FormDataOptions {
  contentType: String
  fileName: String
  filePath: String
}
