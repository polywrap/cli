/* eslint-disable */
/**
 * This file was automatically generated by scripts/manifest/migrate-ts.mustache.
 * DO NOT MODIFY IT BY HAND. Instead, modify scripts/manifest/migrate-ts.mustache,
 * and run node ./scripts/manifest/generateFormatTypes.js to regenerate this file.
 */
import {
  AnyBuildManifest,
  BuildManifest,
  BuildManifestFormats,
  latestBuildManifestFormat
} from ".";

import {
  migrate as migrate_0_0_1_prealpha_1_to_0_0_1_prealpha_2
} from "./migrators/0.0.1-prealpha.1_to_0.0.1-prealpha.2";

import { Tracer } from "@web3api/tracing-js";

type Migrator = {
  [key in BuildManifestFormats]?: (m: AnyBuildManifest) => BuildManifest;
};

export const migrators: Migrator = {
  "0.0.1-prealpha.1": migrate_0_0_1_prealpha_1_to_0_0_1_prealpha_2,
};

export const migrateBuildManifest = Tracer.traceFunc(
  "core: migrateBuildManifest",
  (manifest: AnyBuildManifest, to: BuildManifestFormats): BuildManifest => {
    const from = manifest.format as BuildManifestFormats;

    if (from === latestBuildManifestFormat) {
      return manifest as BuildManifest;
    }

    if (!(from in BuildManifestFormats)) {
      throw new Error(`Unrecognized BuildManifestFormat "${manifest.format}"`);
    }

    const migrator = migrators[from];
    if (!migrator) {
      throw new Error(
        `Migrator from BuildManifestFormat "${from}" to "${to}" is not available`
      );
    }

    return migrator(manifest);
  }
);
