# This file was automatically generated. DO NOT MODIFY IT BY HAND. Instead, modify `deserialize.py.mustache` and run the
# `generate_manifest_types.py` script to regenerate this file.
from . import (
    {{type}},
    Any{{type}},
    migrate{{type}},
    validate{{type}},
    latest{{type}}Format,
)
from ...deserialize import DeserializeManifestOptions
import json
from typing import cast, Optional
from packaging import version
import yaml


def deserialize{{type}}(manifest: str, options: Optional[DeserializeManifestOptions]) -> {{type}}:
    try:
        any{{type}}: Optional[Any{{type}}] = json.loads(manifest)
    except:
        any{{type}}: Optional[Any{{type}}] = yaml.safe_load(manifest)

    if any{{type}} is None:
        raise ValueError(f'Unable to parse {{type}}: {manifest}')

    if options is None or not options.no_validate:
        validate{{type}}(any{{type}}, getattr(options, 'ext_schema', None))

    any{{type}}.__type = '{{type}}'

    manifest_version = version.parse(any{{type}}.format)
    latest_version = version.parse(latest{{type}}Format)

    if manifest_version < latest_version:  # upgrade
        return migrate{{type}}(any{{type}}, latest{{type}}Format)
    elif manifest_version > latest_version:  # downgrade
        raise ValueError(f'Cannot downgrade Polywrap version {any{{type}}.format}, please upgrade your PolywrapClient.')
    else:  # latest
        return cast(any{{type}}, {{type}})
