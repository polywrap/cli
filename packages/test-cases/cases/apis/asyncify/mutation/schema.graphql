#import { Mutation, Connection, Query } into Ethereum from "w3://ens/ethereum.web3api.eth"

type BigObj {
  propA: String!
  propB: String!
  propC: String!
  propD: String!
  propE: String!
  propF: String!
  propG: String!
  propH: String!
  propI: String!
  propJ: String!
  propK: String!
  propL: String!
}

type Mutation {
  setDataWithLargeArgs(
    address: String!
    value: String!
    connection: Ethereum_Connection
  ): String!

  setDataWithManyArgs(
    address: String!
    valueA: String!
    valueB: String!
    valueC: String!
    valueD: String!
    valueE: String!
    valueF: String!
    valueG: String!
    valueH: String!
    valueI: String!
    valueJ: String!
    valueK: String!
    valueL: String!
    connection: Ethereum_Connection
  ): String!

  setDataWithManyStructuredArgs(
    address: String!
    valueA: BigObj!
    valueB: BigObj!
    valueC: BigObj!
    valueD: BigObj!
    valueE: BigObj!
    valueF: BigObj!
    valueG: BigObj!
    valueH: BigObj!
    valueI: BigObj!
    valueJ: BigObj!
    valueK: BigObj!
    valueL: BigObj!
    connection: Ethereum_Connection
  ): Boolean!

  deployContract(
    connection: Ethereum_Connection
  ): String!

  localVarMethod(
    address: String!
    connection: Ethereum_Connection
  ): Boolean!

  globalVarMethod(
    address: String!
    connection: Ethereum_Connection
  ): Boolean!

  subsequentInvokes(
    address: String!
    numberOfTimes: Int!
    connection: Ethereum_Connection
  ): [String!]!
}
