set -e

{{#polywrap_linked_packages.length}}
{{#polywrap_linked_packages}}
toml set ./{{#polywrap_module}}{{dir}}{{/polywrap_module}}/Cargo.toml dependencies.{{name}}.path /linked-packages/{{name}} > ./{{#polywrap_module}}{{dir}}{{/polywrap_module}}/Cargo-local.toml
  rm -rf ./{{#polywrap_module}}{{dir}}{{/polywrap_module}}/Cargo.toml
  mv ./{{#polywrap_module}}{{dir}}{{/polywrap_module}}/Cargo-local.toml ./{{#polywrap_module}}{{dir}}{{/polywrap_module}}/Cargo.toml
{{/polywrap_linked_packages}}
{{/polywrap_linked_packages.length}}

{{#polywrap_module}}
toml set ./{{dir}}/Cargo.toml lib.crate-type ["cdylib"] > ./{{dir}}/Cargo-local.toml
rm -rf ./{{dir}}/Cargo.toml
mv ./{{dir}}/Cargo-local.toml ./{{dir}}/Cargo.toml
sed -i 's/\"\[cdylib\]\"/\[\"cdylib\"\]/g' ./{{dir}}/Cargo.toml

toml set ./{{dir}}/Cargo.toml package.name "module" > ./{{dir}}/Cargo-local.toml
rm -rf ./{{dir}}/Cargo.toml
mv ./{{dir}}/Cargo-local.toml ./{{dir}}/Cargo.toml

cargo build --manifest-path ./{{dir}}/Cargo.toml \
    --target wasm32-unknown-unknown --release

rm -rf ./build
mkdir ./build

wasm-bindgen ./{{dir}}/target/wasm32-unknown-unknown/release/module.wasm --out-dir ./build --out-name bg_module.wasm

wasm-snip ./build/bg_module.wasm -o ./build/snipped_module.wasm
rm -rf ./build/bg_module.wasm

wasm-opt --asyncify -Os ./build/snipped_module.wasm -o ./build/wrap.wasm
rm -rf ./build/snipped_module.wasm
{{/polywrap_module}}