{
  "commands_build_address": "ENS Address",
  "commands_build_description": "Builds a Web3API and (optionally) uploads it to IPFS",
  "commands_build_ensRegistry": "ENS Registry",
  "commands_build_error_outputDirMissingPath": "{option} option missing {argument} argument",
  "commands_build_error_resolution": "ENS Resolution Failed",
  "commands_build_error_testEnsAddressMissing": "{option} option missing {argument} argument",
  "commands_build_error_testEnsNodeMissing": "{option} option requires the {required} option",
  "commands_build_ethProvider": "Ethereum Provider",
  "commands_build_keypressListener_exit": "Exit: [CTRL + C], [ESC], or [Q]",
  "commands_build_keypressListener_watching": "Watching",
  "commands_build_options_e": "Publish the package to a test ENS domain locally (requires --ipfs)",
  "commands_build_options_e_address": "address",
  "commands_build_options_e_domain": "domain",
  "commands_build_options_h": "Show usage information",
  "commands_build_options_i": "Upload build results to an IPFS node (default: dev-server's node)",
  "commands_build_options_i_node": "node",
  "commands_build_options_o": "Output directory for build results (default: build/)",
  "commands_build_options_o_path": "path",
  "commands_build_options_options": "options",
  "commands_build_options_t": "Use the development server's ENS instance",
  "commands_build_options_w": "Automatically rebuild when changes are made (default: false)",
  "commands_build_options_v": "Verbose output (default: false)",
  "commands_build_uriViewers": "URI Viewers",
  "commands_codegen_description": "Auto-generate API Types",
  "commands_codegen_error_domain": "domain",
  "commands_codegen_error_customScriptMissingPath": "{option} option missing {argument} argument",
  "commands_codegen_options_e": "ENS address to lookup external schemas (default: 0x0000...2e1e)",
  "commands_codegen_options_e_address": "address",
  "commands_codegen_options_h": "Show usage information",
  "commands_codegen_options_c": "Path to a custom generation script (JavaScript | TypeScript)",
  "commands_codegen_options_i": "IPFS node to load external schemas (default: ipfs.io & localhost)",
  "commands_codegen_options_i_node": "node",
  "commands_codegen_options_m": "Path to the Web3API manifest file (default",
  "commands_build_options_manifest": "manifest",
  "commands_codegen_options_o": "Output directory for custom generated types (default: 'types/')",
  "commands_codegen_options_o_path": "path",
  "commands_options_options": "options",
  "commands_codegen_success": "Types were generated successfully",
  "commands_create_description": "Create a new project with w3 CLI",
  "commands_create_directoryExists": "Directory with name {dir} already exists",
  "commands_create_error_commandFail": "Command failed: {error}",
  "commands_create_error_noCommand": "Please provide a command",
  "commands_create_error_noLang": "Please provide a language",
  "commands_create_error_noName": "Please provide a project name",
  "commands_create_error_outputDirMissingPath": "{option} option missing {argument} argument",
  "commands_create_error_unrecognizedCommand": "Unrecognized command",
  "commands_create_error_unrecognizedLanguage": "Unrecognized language",
  "commands_create_options_command": "command",
  "commands_create_options_commands": "Commands",
  "commands_create_options_createApp": "Create a Web3API application",
  "commands_create_options_createPlugin": "Create a Web3API plugin",
  "commands_create_options_createProject": "Create a Web3API project",
  "commands_create_options_h": "Show usage information",
  "commands_create_options_lang": "lang",
  "commands_create_options_langs": "langs",
  "commands_create_options_o": "Output directory for the new project",
  "commands_create_options_o_path": "path",
  "commands_create_options_projectName": "project-name",
  "commands_create_options_recipeScript": "recipe-script",
  "commands_create_overwritePrompt": "Do you want to overwrite this directory?",
  "commands_create_overwriting": "Overwriting {dir}...",
  "commands_create_readyDapp": "You are ready to build a dApp using Web3API",
  "commands_create_readyPlugin": "You are ready to build a plugin into a Web3API",
  "commands_create_readyProtocol": "You are ready to turn your protocol into a Web3API",
  "commands_create_settingUp": "Setting everything up...",
  "commands_plugin_description": "Build/generate types for the plugin",
  "commands_plugin_error_domain": "domain",
  "commands_plugin_error_noCommand": "Please provide a command",
  "commands_plugin_error_outputDirMissingPath": "{option} option missing {argument} argument",
  "commands_plugin_options_build": "Build the plugin",
  "commands_plugin_options_codegen": "Generate code for the plugin",
  "commands_plugin_options_command": "command",
  "commands_plugin_options_e": "ENS address to lookup external schemas (default: 0x0000...2e1e)",
  "commands_plugin_options_e_address": "address",
  "commands_plugin_options_h": "Show usage information",
  "commands_plugin_options_i": "IPFS node to load external schemas (default: dev-server's node)",
  "commands_plugin_options_i_node": "node",
  "commands_plugin_options_lang": "lang",
  "commands_plugin_options_langs": "langs",
  "commands_plugin_options_m": "Path to the Web3API manifest file (default: {default})",
  "commands_plugin_options_path": "path",
  "commands_plugins_options_schema": "Output path for the built schema (default: {default})",
  "commands_plugins_options_types": "Output directory for the generated types (default: {default})",
  "commands_query_description": "Query Web3APIs using recipe scripts",
  "commands_query_error_missingScript": "Required argument {script} is missing",
  "commands_query_error_noApi": "API needs to be initialized",
  "commands_query_error_readFail": "Failed to read query {query}",
  "commands_query_error_noTestEnvFound": "w3 test-env not found, please run 'w3 test-env up'",
  "commands_testEnv_description": "Manage a test environment for Web3API",
  "commands_testEnv_error_never": "This should never happen...",
  "commands_testEnv_error_noCommand": "No command given",
  "commands_testEnv_error_unrecognizedCommand": "Unrecognized command: {command}",
  "commands_testEnv_options_command": "command",
  "commands_testEnv_options_start": "Startup the test env",
  "commands_testEnv_options_stop": "Shutdown the test env",
  "commands_testEnv_shutdown_error": "Failed to shutdown test environment",
  "commands_testEnv_shutdown_text": "Shutting down test environment...",
  "commands_testEnv_shutdown_warning": "Warning shutting down test environment",
  "commands_testEnv_startup_error": "Failed to start test environment",
  "commands_testEnv_startup_text": "Starting test environment...",
  "commands_testEnv_startup_warning": "Warning starting test environment",
  "commands_w3_error_notACommand": "is not a command",
  "commands_w3_helpPrompt": "Type {command} to view common commands",
  "lib_codeGenerator_genCodeError": "Failed to generate types",
  "lib_codeGenerator_genCodeText": "Generate types",
  "lib_codeGenerator_genCodeWarning": "Warnings while generating types",
  "lib_codeGenerator_genTemplateStep": "Generating types from {path}",
  "lib_codeGenerator_wrongGenFile": "The generation file provided is wrong.",
  "lib_codeGenerator_templateNoModify": "NOTE: This is generated by 'w3 codegen', DO NOT MODIFY",
  "lib_codeGenerator_noRunMethod": "The generation file provided doesn't have the 'run' method.",
  "lib_codeGenerator_noComposedSchema": "The schema does not exist, please define one.",
  "lib_codeGenerator_typeInfoMissing": "The TypeInfo is missing from the composer output.",
  "lib_compiler_compileError": "Failed to compile Web3API",
  "lib_compiler_compileText": "Compile Web3API",
  "lib_compiler_compileWarning": "Warnings while compiling Web3API",
  "lib_compiler_codegenError": "Failed to generate Web3API schema bindings",
  "lib_compiler_codegenText": "Codegen Web3API schema bindings",
  "lib_compiler_codegenWarning": "Warnings while generating Web3API schema bindings",
  "lib_compiler_compileWasmModulesError": "Failed to compile Wasm modules",
  "lib_compiler_compileWasmModulesText": "Compile Wasm modules",
  "lib_compiler_compileWasmModulesWarning": "Warnings while compiling Wasm modules",
  "lib_compiler_failedSchemaReturn": "Schema composer failed to return a combined schema.",
  "lib_compiler_noModulesToBuild": "No modules to build declared.",
  "lib_compiler_missingSchema": "Missing schema definition for the module {name}",
  "lib_compiler_missingModule": "Missing module definition for the module {name}",
  "lib_compiler_noInterfaceModule": "Interfaces cannot have implementation modules, see module {name}",
  "lib_compiler_step": "Compiling WASM module",
  "lib_compiler_noNodeModules": "could not locate {folder} in parent directories of web3api manifest",
  "lib_compiler_noInvoke": "WASM module is missing the _w3_invoke export. This should never happen...",
  "lib_compiler_dup_code_folder": "Duplicate code generation folder found `{directory}`. Please ensure each module file is located in a unique directory.",
  "lib_compiler_missing_export": "{missingExport} is not exported from the WASM module `{moduleName}`",
  "lib_compiler_cannotBuildInterfaceModules": "Cannot build modules for an Interface Web3API",
  "lib_compiler_outputMetadataText": "Metadata written",
  "lib_compiler_outputMetadataError": "Failed to output metadata",
  "lib_compiler_outputMetadataWarning": "Warnings writing metadata",
  "lib_compiler_outputMetadataFileText": "Metadata written to {path}",
  "lib_generators_projectGenerator_fallback": "Falling back to the local Yarn cache.",
  "lib_generators_projectGenerator_offline": "You appear to be offline.",
  "lib_helpers_manifest_loadError": "Failed to load manifest from {path}",
  "lib_helpers_manifest_loadText": "Manifest loaded from {path}",
  "lib_helpers_manifest_loadWarning": "Warnings loading manifest from {path}",
  "lib_helpers_manifest_outputError": "Failed to output manifest to {path}",
  "lib_helpers_manifest_outputText": "Manifest written to {path}",
  "lib_helpers_manifest_outputWarning": "Warnings writing manifest to {path}",
  "lib_helpers_manifest_unableToDump": "Unable to dump manifest: {manifest}",
  "lib_helpers_manifest_unableToLoad": "Unable to load manifest: {path}",
  "lib_helpers_docker_copyText": "Artifacts written to {path} from the image {image}",
  "lib_helpers_docker_copyError": "Failed to write build artifacts to {path} from the image `{image}`",
  "lib_helpers_docker_copyWarning": "Warnings write build artifacts to {path} from the image `{image}`",
  "lib_helpers_docker_buildText": "Building source image `{image}` using dockerfile `{dockerfile}` in context `{context}`",
  "lib_helpers_docker_buildError": "Error while building source image `{image}` using dockerfile `{dockerfile}` in context `{context}`",
  "lib_helpers_docker_buildWarning": "Warnings while building image `{image}` using dockerfile `{dockerfile}` in context `{context}`",
  "lib_helpers_docker_projectFolderMissing": "Build image `{image}` missing /project folder",
  "lib_helpers_docker_projectBuildFolderMissing": "Build image `{image}` missing build artifact `{artifact}` in folder /project/build",
  "lib_helpers_parameters_unexpectedValue": "Unexpected value provided for one or more of {options}. See --help for more information.",
  "lib_language_unsupportedManifestLanguage": "The manifest's language {language} is not supported.",
  "lib_publishers_ipfsPublisher_urlMalformed": "IPFS URL Malformed",
  "lib_project_invalid_build_language": "Unrecognized build language {language}. No default manifest found at {defaultPath}",
  "lib_project_language_not_found": "Build language not found. Please include the `language` property in the manifest file.",
  "lib_typescript_notInstalled": "Your project uses typescript, but it's not installed",
  "lib_typescript_tsNodeNotInstalled": "Your project uses typescript, but ts-node is not installed",
  "lib_watcher_alreadyWatching": "Watcher session is already in progress. Directory: {dir}",
  "lib_docker_invalidImageId": "Invalid docker image ID returned: {imageId}"
}